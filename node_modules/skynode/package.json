{
  "name": "skynode",
  "version": "0.0.2",
  "description": "a node.js client for the sky behavioral database",
  "main": "sky.js",
  "scripts": {
    "test": "node test/test-table.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/sandfox/skynode.git"
  },
  "keywords": [
    "sky",
    "skydb",
    "client"
  ],
  "author": {
    "name": "sandfox"
  },
  "license": "MIT",
  "dependencies": {
    "request": "2.16.x"
  },
  "devDependencies": {
    "async": "0.2.6"
  },
  "readme": "# Skynode\n\nA low level client for the [Sky](http://skydb.io/) database. Operates using the HTTP protocol.\n\nCurrently very alpha and lacking tests and docs. Doesn't maintain any form of state and currently really have understanding of the data it's returned by the sky server. Designed largely for higher level clients to be built on top of it\n\nThe api/naming/style is by no means fixed at this stage and is open to suggested changes or pull requests.\n\n## Stability Index\n\nBased up on [node.js stability index](http://nodejs.org/api/documentation.html#documentation_stability_index)\n\n__Stability: 1 - Experimental__\n\n## Installation\n\n`npm install skynode`\n\n## Depenendecies\n\nThe `request` module us currently used to make all HTTP requests. Nor particularly tied to it though.\n\n## Usage\n\nInstantiate a client. Only supported option is host which is non-optional.\n\n```javascript\nvar skynode = require('skynode');\n\nvar opts = {host:localhost:8585}\n\nvar client = skynode.createClient(opts);\n```\n\nCurrently all methods expect a callback as their last argument and that callback will be passed 2 args, `err` and `response`. e.g\n\n```javascript\nvar callback = function(err, response) {\n    if(err) {\n        console.error(err);\n    } else {\n        console.log(response);\n    }\n}\n```\n---------\n\n### Tables API\n\n\n__List tables__\n\n```javascript\nclient.listTables(function(err, res){\n    console.log(res);\n    //[\n    //{name: 'users-table'}\n    //{name: 'anotherTable'}\n    //]\n})\n```\n\n__Get a table__\n\n```javascript\nclient.getTable('users-table', function(err, res){\n    console.log(res);\n    //{name: 'users-table'}\n})\n```\n__Get a table's stats__\n\n```javascript\nclient.getTableStats('users-table', function(err, res){\n    console.log(res);\n    //{count: 2}\n})\n```\n__Create a table__\n\n```javascript\nclient.createTable('users-table', function(err, res){\n    console.log(res);\n    //{name: 'users-table'}\n})\n```\n\n__Delete a table__\n\n```javascript\nclient.deleteTable('users-table', function(err, res){\n    console.log(res);\n    //`null`\n})\n```\n---------\n\n### Properties API\n\n__List properties for a table__\n\n```javascript\nclient.listProperties('users-table', function(err, res){\n    console.log(res);\n    //[\n    //{\"id\":1,\"name\":\"uname\",\"transient\":false,\"dataType\":\"string\"}\n    //{\"id\":2,\"name\":\"type\",\"transient\":false,\"dataType\":\"string\"}\n    //]\n})\n```\n\n__Create a property__\n\n```javascript\nvar property = {\n    name: \"check\",\n    transient: false,\n    dataType: \"string\"\n}\nclient.addProperty(property, 'users-table', function(err, res){\n    console.log(res);\n    //{\"id\":2,\"name\":\"check\",\"transient\":false,\"dataType\":\"string\"}\n})\n```\n\n__Get a property__\n\n```javascript\n```\n__Rename a property__\n\n```javascript\n```\n__Delete a property__\n\n```javascript\n```\n---------\n\n### Events API\n\n\n__List events for an object__\n\n```javascript\n```\n\n__Delete all events for an object__\n\n```javascript\n```\n\n__Get an event__\n\n```javascript\n```\n\n__Replace an event__\n\n```javascript\n```\n\n__Merge an event__\n\n```javascript\n```\n\n__Delete an event__\n\n```javascript\n```\n---------\n\n### Query API\n\n```javascript\n```\n---------\n\n### Misc APIs\n\n__Ping__\n\n```javascript\nclient.ping(function(err, res){\n    console.log(res.message); //Should return 'ok'\n})\n```",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/sandfox/skynode/issues"
  },
  "_id": "skynode@0.0.2",
  "dist": {
    "shasum": "ec8ae01db1e7e2a1d60d0a1e54d6024011942f66"
  },
  "_from": "skynode@",
  "_resolved": "https://registry.npmjs.org/skynode/-/skynode-0.0.2.tgz"
}
